import React, {useState, useEffect} from 'react';
import {
  TextField,
  Grid,
  Paper,
  Typography,
  Snackbar,
  Button,
} from '@mui/material';
import {Alert} from '@mui/material';
import axios from 'axios';
const moment = require('moment');
import Autocomplete from '@mui/material/Autocomplete';
import html2pdf from 'html2pdf.js';

const PaymentVoucher = () => {
  const [rows, setRows] = useState([{number: 1, description: '', amount: ''}]);
  const [total_amount, setTotalAmount] = useState(0);
  const [voucherNo, setVoucherno] = useState(0);
  const [snackbarOpen, setSnackbarOpen] = useState(false);
  const [snackbarMessage, setSnackbarMessage] = useState('');
  const [snackbarSeverity, setSnackbarSeverity] = useState('');
  const [voucher_title, setNameVoucher_title] = useState('');
  const [date, setDate] = useState('');
  const [voucher_details, setLargeParagraph] = useState('');

  const calculateTotalAmount = () => {
    const sum = rows.reduce((total, row) => {
      return total + parseFloat(row.amount || 0);
    }, 0);
    setTotalAmount(sum);
  };

  const handleAddRow = () => {
    const nextNumber = rows.length + 1;
    setRows([...rows, {number: nextNumber, description: '', amount: ''}]);
  };

  const handleSnackbarClose = () => {
    setSnackbarOpen(false);
  };

  const generateNo = () => {
    const timestamp = moment().format('YYMMDDHHmmss');
    const voucherNumber = `V${timestamp}`;
    setVoucherno(voucherNumber);
  };

  const handleRowChange = (index, field, value) => {
    const updatedRows = [...rows];
    const isOptionSelected = possibleDescriptions.includes(value);

    if (isOptionSelected) {
      updatedRows[index][field] = value;
    } else {
      updatedRows[index][field] = value;
    }

    setRows(updatedRows);
    calculateTotalAmount();
  };

  const handleSubmit = async () => {
    try {
      const dataToSend = {
        date,
        voucher_title,
        voucherNo,
        voucher_details,
        total_amount,
        myArrayField: rows.map((row) => ({
          number: row.number,
          description: row.description,
          amount: row.amount,
        })),
      };
      console.log(dataToSend, 'dataToSend');

      // Send a POST request to your API endpoint using axios
      const response = await axios.post(
        `${process.env.REACT_APP_BASE_URL}/expense`,
        dataToSend,
      );

      // Handle the response
      console.log('Response:', response.data);
      setSnackbarMessage('সফলভাবে তৈরী হয়েছে');
      setSnackbarSeverity('success');
      setSnackbarOpen(true);

      // Convert the data object to a string
      const dataString = JSON.stringify(dataToSend);
      const dataObject = JSON.parse(dataString);

      // Create the dynamic table content
      const tableRows = dataObject.myArrayField
        .map(
          (item) => `
      <tr>
  <td>${item.number}</td>
  <td>${item.description}</td> 
  <td>${item.amount}</td>
  
</tr>

    `,
        )
        .join('');

      const staticContent = `
      <div>
      <body>
      <div style="position: relative;">

    

        <h4 style="text-align: center; margin: 10px;">
          আনসারুল মুসলিমীন বহুমূখী সমবায় সমিতি লি:
        </h4>

        <h4 style="text-align: center; margin: 10px;">
          ANSARUL MUSLIMIN BAHUMUKHI SAMABAY SAMITY LTD.
        </h4>
        
        <h6 style="margin-bottom: 4px; text-align: center; margin: 10px;">
          ১-জি, ১/১, চিড়িয়াখানা রোড, মিরপুর-১, ঢাকা-১২১৬ <br />
          গভ: রেজি: নং-১২৮/৯৮
          <br />
          ফোন-৮০২১৬৩৬
        </h6>
        
        <hr/>
        <div style="text-align: center; margin: 10px";><p>ভাউচার</p></div>
        
        <div style="display: flex; justify-content: space-between;">
          <div>
            <p>ভাউচার নং : ${voucherNo}</p>
            <p>তারিখ : ${dataObject?.date}</p>
          </div>
        </div>

      <div style='text-align: center; margin-top:15px;'>
        <p>ভাউচার টাইটেল : ${voucher_title}</p>
        <p>বিস্তারিত : ${voucher_details}</p>
      </div>
        
        <table border="1" style="margin: 10px auto; text-align: center; width: 100%;">
          <thead>
            <tr>
              <th style="border: 1px solid #000; padding: 5px;">ক্র: নং:</th>
              <th style="border: 1px solid #000; padding: 5px;">বিবরণ</th>
              <th style="border: 1px solid #000; padding: 5px;">টাকার পরিমাণ</th>
            </tr>
          </thead>
          <tbody id="dynamicTableBody">
            ${tableRows}
          </tbody>
        </table>
        <p style='float:right'>মোট টাকার পরিমাণ : ${dataObject?.total_amount}</p>
      </div>
      <div style='padding-top: 120px;'>
      <div style="display: flex; justify-content: space-between; margin:10px;">
        <p>আদায়কারী </p>
        <p> হিসাবরক্ষক  </p> 
        <p> কোষাধক্ষ</p>
        <p> সম্পাদক</p>
      </div>
      <hr/>
      <p style='text-align: center; font-weight: 2;'>This roshid is generated by ANSARUL ERP SERVER</p>
      <p style='text-align: center; font-weight: 2;'>Powered by: TechWave Limited</p>
      

      </div>
    </body>
      </div>
    `;

      const tempDiv = document.createElement('div');
      tempDiv.innerHTML = staticContent;

      // Append the temporary div to the body
      document.body.appendChild(tempDiv);

      await html2pdf(tempDiv, {
        margin: 10,
        filename: voucherNo,
        image: {type: 'jpeg', quality: 0.98},
        html2canvas: {scale: 2},
        jsPDF: {
          unit: 'mm',
          format: 'a5', // Set to A7
          orientation: 'portrait',
          width: 105, // A7 width
          height: 74, // A7 height
        },
      });

      document.body.removeChild(tempDiv);
    } catch (error) {
      console.error('Failed to submit');
      console.error('Error:', error.message);
      setSnackbarMessage('ব্যর্থ হয়েছে');
      setSnackbarSeverity('error');
      setSnackbarOpen(true);
    }
  };

  useEffect(() => {
    generateNo();
  }, []);

  const possibleDescriptions = ['কল্যাণ তহবিল সাহায্য'];

  return (
    <Grid container justifyContent='center'>
      <Grid item xs={12} sm={8} md={6}>
        <Paper elevation={3} sx={{p: 4}}>
          <hr style={{marginTop: '20px'}} />
          <Typography
            sx={{textAlign: 'center', margin: '10px'}}
            variant='h2'
            mb={4}
          >
            আনসারুল মুসলিমীন বহুমূখী সমবায় সমিতি লি: <br />
            ANSARUL MUSLIMIN BAHUMUKHI SAMABAY SAMITY LTD.
          </Typography>
          <Typography sx={{textAlign: 'center'}} mb={4}>
            ১-জি, ১/১, চিড়িয়াখানা রোড, মিরপুর-১, ঢাকা-১২১৬ <br />
            গভ: রেজি: নং-১২৮/৯৮
            <br />
            ফোন-৮০২১৬৩৬
          </Typography>
          <Typography
            sx={{
              textAlign: 'center',
              backgroundColor: 'black',
              color: 'white',
              borderRadius: '10px',
            }}
            mb={5}
          >
            ভাউচার
          </Typography>
          <div style={{display: 'flex', justifyContent: 'space-around'}}>
            <Typography>ভাউচার নং - {voucherNo}</Typography>
            <TextField
              // label='Date'
              type='date'
              value={date}
              onChange={(e) => setDate(e.target.value)}
            />
          </div>

          <div>
            <div style={{margin: '10px', textAlign: 'center'}}>
              <TextField
                label='ভাউচার টাইটেল'
                value={voucher_title}
                onChange={(e) => setNameVoucher_title(e.target.value)}
              />
            </div>
          </div>

          <TextField
            label='ভাউচার বিবরণ'
            multiline
            rows={6}
            value={voucher_details}
            onChange={(e) => setLargeParagraph(e.target.value)}
            fullWidth
          />

          <Grid container spacing={2} mb={4} mt={4} sx={{textAlign: 'center'}}>
            <Grid item xs={2}>
              <Typography
                variant='h3'
                component='h2'
                sx={{backgroundColor: 'black', color: 'white'}}
              >
                ক্র: নং:
              </Typography>
              {rows.map((row, index) => (
                <TextField key={index} value={row.number} disabled />
              ))}
            </Grid>
            <Grid item xs={6}>
              <Typography
                variant='h3'
                component='h3'
                sx={{backgroundColor: 'black', color: 'white'}}
              >
                বিবরণ
              </Typography>
              {rows.map((row, index) => (
                <Autocomplete
                  key={index}
                  value={row.description}
                  onChange={(_, newValue) =>
                    handleRowChange(index, 'description', newValue)
                  }
                  options={possibleDescriptions}
                  freeSolo
                  onInputChange={(_, newInputValue) => {
                    handleRowChange(index, 'description', newInputValue);
                  }}
                  renderInput={(params) => (
                    <TextField
                      {...params}
                      // label='বিবরণ'
                      fullWidth
                      multiline
                      variant='outlined'
                      sx={{
                        marginBottom: '5px',
                        '& input::placeholder': {
                          fontSize: '12px',
                        },
                      }}
                    />
                  )}
                />
              ))}
            </Grid>

            <Grid item xs={4}>
              <Typography
                variant='h3'
                component='h2'
                sx={{backgroundColor: 'black', color: 'white'}}
              >
                টাকার পরিমাণ
              </Typography>
              {rows.map((row, index) => (
                <TextField
                  key={index}
                  value={row.amount}
                  onChange={(e) => {
                    const inputValue = e.target.value;
                    const validInput = inputValue.replace(/[^0-9.]/g, '');
                    handleRowChange(index, 'amount', validInput);
                  }}
                  type='text'
                  inputProps={{min: 0}}
                />
              ))}
            </Grid>
          </Grid>
          <div style={{textAlign: 'right', margin: '20px'}}>
            <Typography>মোট টাকার পরিমাণ: {total_amount}</Typography>
          </div>
          <hr />
          <div
            style={{
              display: 'flex',
              justifyContent: 'space-between',
              marginTop: '20px',
            }}
          >
            <Button variant='outlined' onClick={handleAddRow}>
              সারি অ্যাড করুন
            </Button>
            <br />
            <Button
              variant='outlined'
              onClick={handleSubmit}
              sx={{marginTop: '20px'}}
            >
              সংরক্ষণ করুন
            </Button>
          </div>

          <Snackbar
            open={snackbarOpen}
            autoHideDuration={6000}
            onClose={handleSnackbarClose}
          >
            <Alert
              onClose={handleSnackbarClose}
              severity={snackbarSeverity}
              sx={{width: '100%'}}
            >
              {snackbarMessage}
            </Alert>
          </Snackbar>
        </Paper>
      </Grid>
    </Grid>
  );
};

export default PaymentVoucher;
